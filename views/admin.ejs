<style>
    /* Admin page font sizes */
    .container h2 {
        font-size: 3.5rem !important;
        font-weight: 700 !important;
    }
    .container p {
        font-size: 2.2rem !important;
    }
    
    /* Stats cards */
    .card-body h4 {
        font-size: 3rem !important;
        font-weight: 700 !important;
    }
    .card-body p {
        font-size: 2rem !important;
    }
    .card-body i {
        font-size: 3rem !important;
    }
    
    /* Navigation tabs */
    .nav-tabs .nav-link {
        font-size: 2rem !important;
        font-weight: 600 !important;
        padding: 1rem 1.5rem !important;
    }
    
    /* Table headers */
    .table thead th {
        font-size: 2.2rem !important;
        font-weight: 700 !important;
        padding: 1.5rem 1rem !important;
    }
    
    /* Table data */
    .table tbody td {
        font-size: 1.8rem !important;
        padding: 1.2rem 1rem !important;
        vertical-align: middle !important;
    }
    
    /* Badges */
    .badge {
        font-size: 1.6rem !important;
        padding: 0.8rem 1.2rem !important;
    }
    
    /* Buttons */
    .btn {
        font-size: 1.8rem !important;
        padding: 0.8rem 1.5rem !important;
    }
    .btn-sm {
        font-size: 1.6rem !important;
        padding: 0.6rem 1.2rem !important;
    }
    .btn-lg {
        font-size: 2.2rem !important;
        padding: 1rem 2rem !important;
    }
    
    /* Card headers */
    .card-header h5 {
        font-size: 2.5rem !important;
        font-weight: 700 !important;
    }
    
    /* Modal */
    .modal-title {
        font-size: 2.5rem !important;
        font-weight: 700 !important;
    }
    .modal-body .form-label {
        font-size: 2rem !important;
        font-weight: 600 !important;
    }
    .modal-body .form-control {
        font-size: 1.8rem !important;
        padding: 1rem 1.2rem !important;
    }
    .modal-body textarea.form-control {
        font-size: 1.8rem !important;
        padding: 1rem 1.2rem !important;
    }
    
    /* Alert messages */
    .alert {
        font-size: 2rem !important;
    }
</style>

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="fas fa-cog me-2 text-primary"></i>Trang Quản Lý
            </h2>
            <p class="text-muted">Quản lý hệ thống bình chọn và người dùng</p>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <i class="fas fa-users fa-2x mb-2"></i>
                    <h4 class="mb-1" id="totalUsers">-</h4>
                    <p class="mb-0">Tổng người dùng</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <i class="fas fa-vote-yea fa-2x mb-2"></i>
                    <h4 class="mb-1" id="totalVotes">-</h4>
                    <p class="mb-0">Tổng phiếu bầu</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <i class="fas fa-list fa-2x mb-2"></i>
                    <h4 class="mb-1" id="totalNominations">-</h4>
                    <p class="mb-0">Tổng đề cử</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <i class="fas fa-tags fa-2x mb-2"></i>
                    <h4 class="mb-1" id="totalCategories">-</h4>
                    <p class="mb-0">Danh mục</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation Tabs -->
    <ul class="nav nav-tabs mb-4" id="adminTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="nominations-tab" data-bs-toggle="tab" data-bs-target="#nominations" type="button" role="tab">
                <i class="fas fa-list me-2"></i>Quản Lý Đề Cử
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab">
                <i class="fas fa-users me-2"></i>Quản Lý Người Dùng
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="categories-tab" data-bs-toggle="tab" data-bs-target="#categories" type="button" role="tab">
                <i class="fas fa-clock me-2"></i>Quản Lý Thời Gian
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="results-tab" data-bs-toggle="tab" data-bs-target="#results" type="button" role="tab">
                <i class="fas fa-chart-bar me-2"></i>Xem Kết Quả
            </button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="adminTabContent">
        <!-- Nominations Management -->
        <div class="tab-pane fade show active" id="nominations" role="tabpanel">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-list me-2"></i>Danh Sách Đề Cử
                    </h5>
                    <div>
                        <a href="/trash" class="btn btn-outline-warning me-2">
                            <i class="fas fa-trash me-2"></i>Lịch Sử Xóa
                        </a>
                        <a href="/manage-categories" class="btn btn-primary">
                            <i class="fas fa-tags me-2"></i>Tạo Danh Mục
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <button id="selectAllBtn" class="btn btn-outline-primary me-2">
                            <i class="fas fa-check-square me-2"></i>Chọn tất cả
                        </button>
                        <button id="deselectAllBtn" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-square me-2"></i>Bỏ chọn tất cả
                        </button>
                        <button id="deleteSelectedBtn" class="btn btn-danger" disabled>
                            <i class="fas fa-trash me-2"></i>Xóa đã chọn (<span id="selectedCount">0</span>)
                        </button>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover" id="nominationsTable">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selectAllCheckbox" class="form-check-input">
                                    </th>
                                    <th>ID</th>
                                    <th>Tên</th>
                                    <th>Danh mục</th>
                                    <th>Mô tả</th>
                                    <th>Ngày tạo</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="nominationsTableBody">
                                <!-- Data will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Users Management -->
        <div class="tab-pane fade" id="users" role="tabpanel">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-users me-2"></i>Danh Sách Người Dùng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="usersTable">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Tên đăng nhập</th>
                                    <th>Email</th>
                                    <th>Vai trò</th>
                                    <th>Ngày tạo</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="usersTableBody">
                                <!-- Data will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Categories Management -->
        <div class="tab-pane fade" id="categories" role="tabpanel">
            <div class="card">
                <div class="card-header">
                                    <h5 class="mb-0">
                    <i class="fas fa-tags me-2"></i>Quản Lý Danh Mục & Ứng Viên
                </h5>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <a href="/manage-categories" class="btn btn-primary btn-lg">
                            <i class="fas fa-tags me-2"></i>Quản Lý Danh Mục & Ứng Viên
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Results View -->
        <div class="tab-pane fade" id="results" role="tabpanel">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-bar me-2"></i>Xem Kết Quả
                    </h5>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <a href="/results" class="btn btn-outline-primary btn-lg w-100">
                                    <i class="fas fa-eye me-2"></i>Xem Công Khai
                                </a>
                            </div>
                            <div class="col-md-6 mb-3">
                                <a href="/admin/results" class="btn btn-primary btn-lg w-100">
                                    <i class="fas fa-chart-bar me-2"></i>Xem Chi Tiết (Admin)
                                </a>
                            </div>
                        </div>
                        <p class="text-muted mt-3">
                            <i class="fas fa-info-circle me-1"></i>
                            <strong>Xem Công Khai:</strong> Hiển thị kết quả cho tất cả người dùng<br>
                            <strong>Xem Chi Tiết:</strong> Thống kê chi tiết chỉ dành cho admin
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Nomination Modal -->
<div class="modal fade" id="addNominationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-user-plus me-2"></i>Thêm Ứng Viên Mới
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addNominationForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="nominationName" class="form-label">Tên đề cử</label>
                        <input type="text" class="form-control" id="nominationName" required>
                    </div>
                    <div class="mb-3">
                        <label for="nominationCategory" class="form-label">Danh mục</label>
                        <input type="text" class="form-control" id="nominationCategory" required>
                    </div>
                    <div class="mb-3">
                        <label for="nominationDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="nominationDescription" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Thêm</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    loadStats();
    loadNominations();
    loadUsers();

    // Add nomination form handler
    document.getElementById('addNominationForm').addEventListener('submit', function(e) {
        e.preventDefault();
        addNomination();
    });

    // Bulk selection handlers
    document.getElementById('selectAllBtn').addEventListener('click', selectAllNominations);
    document.getElementById('deselectAllBtn').addEventListener('click', deselectAllNominations);
    document.getElementById('deleteSelectedBtn').addEventListener('click', deleteSelectedNominations);
    document.getElementById('selectAllCheckbox').addEventListener('change', toggleSelectAll);
});

function loadStats() {
    // This would typically make an API call to get real stats
    // For now, we'll show placeholder data
    document.getElementById('totalUsers').textContent = '25';
    document.getElementById('totalVotes').textContent = '150';
    document.getElementById('totalNominations').textContent = '12';
    document.getElementById('totalCategories').textContent = '4';
}

function loadNominations() {
    fetch('/api/nominations')
        .then(response => response.json())
        .then(nominations => {
            const tbody = document.getElementById('nominationsTableBody');
            tbody.innerHTML = '';

            if (nominations.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center text-muted">Không có đề cử nào</td></tr>';
                return;
            }

            nominations.forEach(nom => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <input type="checkbox" class="form-check-input nomination-checkbox" value="${nom.id}" onchange="updateSelectedCount()">
                    </td>
                    <td>${nom.id}</td>
                    <td>${nom.name}</td>
                    <td><span class="badge bg-primary">${nom.category}</span></td>
                    <td>${nom.description || 'Không có mô tả'}</td>
                    <td>${new Date(nom.created_at).toLocaleDateString('vi-VN')}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary me-1" onclick="editNomination(${nom.id})">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" onclick="deleteNomination(${nom.id})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        })
        .catch(error => {
            console.error('Error:', error);
            const tbody = document.getElementById('nominationsTableBody');
            tbody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">Có lỗi xảy ra khi tải dữ liệu</td></tr>';
        });
}

function loadUsers() {
    // This would typically make an API call to get users
    // For now, we'll show sample data
    const sampleUsers = [
        { id: 1, username: 'admin', email: 'admin@example.com', role: 'admin', created_at: '2024-01-01' },
        { id: 2, username: 'user1', email: 'user1@example.com', role: 'user', created_at: '2024-01-10' },
        { id: 3, username: 'user2', email: 'user2@example.com', role: 'user', created_at: '2024-01-12' }
    ];

    const tbody = document.getElementById('usersTableBody');
    tbody.innerHTML = '';

    sampleUsers.forEach(user => {
        const row = document.createElement('tr');
        const roleBadge = user.role === 'admin' ? 'bg-danger' : 'bg-success';
        row.innerHTML = `
            <td>${user.id}</td>
            <td>${user.username}</td>
            <td>${user.email}</td>
            <td><span class="badge ${roleBadge}">${user.role}</span></td>
            <td>${user.created_at}</td>
            <td>
                <button class="btn btn-sm btn-outline-warning me-1" onclick="changeUserRole(${user.id})">
                    <i class="fas fa-user-edit"></i>
                </button>
                <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(${user.id})">
                    <i class="fas fa-trash"></i>
                </button>
            </td>
        `;
        tbody.appendChild(row);
    });
}

function addNomination() {
    const name = document.getElementById('nominationName').value;
    const category = document.getElementById('nominationCategory').value;
    const description = document.getElementById('nominationDescription').value;

    if (!name || !category || !description) {
        alert('Vui lòng điền đầy đủ thông tin');
        return;
    }

    // This would typically make an API call to add the nomination
    alert('Đề cử đã được thêm thành công!');
    
    // Close modal and reset form
    const modal = bootstrap.Modal.getInstance(document.getElementById('addNominationModal'));
    modal.hide();
    document.getElementById('addNominationForm').reset();
    
    // Reload nominations
    loadNominations();
}

function editNomination(id) {
    alert(`Chỉnh sửa đề cử ID: ${id}`);
    // Implementation for editing nomination
}

function deleteNomination(id) {
    if (confirm(`Bạn có chắc muốn xóa đề cử ID: ${id}?\n\nĐề cử sẽ được chuyển vào thùng rác và có thể khôi phục sau.`)) {
        fetch('/nominations/' + id + '/delete', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Đã xóa đề cử thành công!');
                loadNominations();
            } else {
                alert('Có lỗi xảy ra: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Có lỗi xảy ra khi xử lý yêu cầu');
        });
    }
}

function changeUserRole(id) {
    alert(`Thay đổi vai trò người dùng ID: ${id}`);
    // Implementation for changing user role
}

function deleteUser(id) {
    if (confirm(`Bạn có chắc muốn xóa người dùng ID: ${id}?`)) {
        alert(`Người dùng ID: ${id} đã được xóa`);
        // Implementation for deleting user
        loadUsers();
    }
}

// Bulk selection functions
function selectAllNominations() {
    const checkboxes = document.querySelectorAll('.nomination-checkbox');
    checkboxes.forEach(checkbox => {
        checkbox.checked = true;
    });
    document.getElementById('selectAllCheckbox').checked = true;
    updateSelectedCount();
}

function deselectAllNominations() {
    const checkboxes = document.querySelectorAll('.nomination-checkbox');
    checkboxes.forEach(checkbox => {
        checkbox.checked = false;
    });
    document.getElementById('selectAllCheckbox').checked = false;
    updateSelectedCount();
}

function toggleSelectAll() {
    const selectAllCheckbox = document.getElementById('selectAllCheckbox');
    const checkboxes = document.querySelectorAll('.nomination-checkbox');
    
    checkboxes.forEach(checkbox => {
        checkbox.checked = selectAllCheckbox.checked;
    });
    updateSelectedCount();
}

function updateSelectedCount() {
    const checkboxes = document.querySelectorAll('.nomination-checkbox:checked');
    const selectedCount = checkboxes.length;
    const deleteBtn = document.getElementById('deleteSelectedBtn');
    const countSpan = document.getElementById('selectedCount');
    
    countSpan.textContent = selectedCount;
    deleteBtn.disabled = selectedCount === 0;
    
    // Update select all checkbox state
    const allCheckboxes = document.querySelectorAll('.nomination-checkbox');
    const selectAllCheckbox = document.getElementById('selectAllCheckbox');
    
    if (selectedCount === 0) {
        selectAllCheckbox.checked = false;
        selectAllCheckbox.indeterminate = false;
    } else if (selectedCount === allCheckboxes.length) {
        selectAllCheckbox.checked = true;
        selectAllCheckbox.indeterminate = false;
    } else {
        selectAllCheckbox.checked = false;
        selectAllCheckbox.indeterminate = true;
    }
}

function deleteSelectedNominations() {
    const checkboxes = document.querySelectorAll('.nomination-checkbox:checked');
    const selectedIds = Array.from(checkboxes).map(cb => parseInt(cb.value));
    
    if (selectedIds.length === 0) {
        alert('Vui lòng chọn ít nhất một đề cử để xóa');
        return;
    }
    
    const confirmMessage = `Bạn có chắc muốn xóa ${selectedIds.length} đề cử đã chọn?\n\nCác đề cử sẽ được chuyển vào thùng rác và có thể khôi phục sau.`;
    
    if (confirm(confirmMessage)) {
        // Use bulk delete API
        fetch('/nominations/bulk-delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ nominationIds: selectedIds })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(`Đã xóa thành công ${data.deletedCount} đề cử!`);
                loadNominations();
            } else {
                alert('Có lỗi xảy ra: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Có lỗi xảy ra khi xử lý yêu cầu');
        });
    }
}
</script>
